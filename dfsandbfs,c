#include<stdio.h>
#include<stdlib.h>
#define max 5
void bfs();
void dfs();

int i;
void main()
{
    int visited[max]= {0};
    int adj[max][max],i,j,start,ch;
    printf("\n Enter the adjacency matrix \n");
    for(i=0; i<max; i++)
    {
        for(j=0; j<max; j++)
        {
            scanf("%d",&adj[i][j]);
        }
    }

    do
    {
    printf("\n DFS and BFS \n 1.BFS \n 2.DFS");
    printf("\n enter your choice - ");
    scanf("%d",&ch);
    switch(ch)
    {
    case 1:bfs(adj,visited,0);
            break;
    case 2:dfs(adj,visited,0);
            break;
    }
    }while(-1);


}

void bfs(int adj[][max],int visited[],int start)
{
    int queue[max],front=-1,rear=-1;

    for(i=0; i<max; i++)
    {
        visited[i]=0;
    }
    queue[++rear]=start;
    ++front;
    visited[start]=1;
    printf("\n BFS traversal for the entered matrix is as follows -");
    while(rear>=front)
    {
        start=queue[front++];
        printf("%c-",start+65);
        for(i=0; i<max; i++)
        {
            if((adj[start][i]==1) && (visited[i]==0))
            {
                queue[++rear]=i;
                visited[i]=1;
            }
        }
    }

}
void dfs(int adj[][max],int visited[],int start)
{
    int stack[max],top=-1;

    for(i=0; i<max; i++)
    {
        visited[i]=0;
    }
    stack[++top]=start;

    visited[start]=1;
    printf("\n DFS traversal for the entered matrix is as follows -");
    while(top!=-1)
    {
        start=stack[top--];
        printf("%c-",start+65);
        for(i=0; i<max; i++)
        {
            if((adj[start][i]==1) && (visited[i]==0))
            {
                stack[++top]=i;
                visited[i]=1;
            }
        }
    }

}
